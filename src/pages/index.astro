---
import { Button } from '../components/Button/Button';
import { CardList } from '../components/Card';
import { ToolSummaryCard } from '../features/Tools/components/ToolSummaryCard';
import { TOOLS } from '../features/Tools/tools';
import '../styles.css';
import { Flow } from '@components/Flow';
import { VisuallyHidden } from '@components/VisuallyHidden';
import { getToolNpmDownloadCount, Tool } from '@domain/tool';
import ContentLayout from '@layouts/ContentLayout.astro';

const toolsOptOut = TOOLS.filter((t) => t.telemetry.type === 'OPT_OUT');
const toolNpmDownloadMap = new WeakMap(
	await Promise.all(
		toolsOptOut.map<Promise<[Tool, number]>>(async (tool) => [
			tool,
			await getToolNpmDownloadCount(tool),
		])
	)
);

const toolsHighlighted = Array.from(toolsOptOut)
	.sort((a, b) => (toolNpmDownloadMap.get(b) ?? 0) - (toolNpmDownloadMap.get(a) ?? 0))
	.slice(0, 4);

const PAGE_TITLE = 'Telemetry of frameworks and static site generators';
---

<ContentLayout title={PAGE_TITLE}>
	<div slot="start">
		<VisuallyHidden><h1>{PAGE_TITLE}</h1></VisuallyHidden>
		<Flow class="intro" slot="start">
			<h2 class="title">Telemetry?<br />No, thanks ðŸ‘‹</h2>
			<p>More and more front-end tools use telemetry to track how they are used.</p>
			<p>
				Assuming no personal identifyable information is saved, this is legal. But by not clearly
				notifying they start to collect data, they leave many users unaware.
			</p>
			<p>Letâ€™s take back our data!</p>
			<Button href="/opt-out">Opt out</Button>
		</Flow>
	</div>

	<div>
		<VisuallyHidden><h2>Tools that track</h2></VisuallyHidden>
		<Flow class="tools">
			<CardList>
				{toolsHighlighted.map((tool) => <ToolSummaryCard headingLevel={3} tool={tool} />)}
			</CardList>
			<Button href="/tools">Browse all tools</Button>
		</Flow>
	</div>
</ContentLayout>

<style>
	.intro {
		font-size: var(--step-1);
	}

	.title {
		font-family: 'Archivo Black', sans-serif;
		font-size: var(--step-5);
		margin-block-end: var(--step-0);
	}

	@media (min-width: 90em) {
		.title {
			font-size: var(--step-6);
		}
	}
</style>
